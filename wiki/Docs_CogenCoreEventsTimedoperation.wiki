#summary cogen.core.events.TimedOperation Documentation for trunk
#labels Documentation

==== Parent module: [Docs_CogenCoreEvents cogen.core.events] ====
==== Methods: [#cleanup cleanup] [#finalize finalize] [#process process] ====
==== Attributes: [#finalized finalized] [#prio prio] [#weak_timeout weak_timeout] ====

= Class: `TimedOperation` =

Operations that have a timeout derive from this.

Eg:

{{{
yield TimedOperation(
    timeout=None, 
    weak_timeout=True,
    prio=priority.DEFAULT
)
}}}

  * timeout - can be a float/int (number of seconds) or a timedelta or a datetime value
    if it's a datetime the timeout will occur on that moment
  * weak_timeout - strong timeouts just happen when specified, weak_timeouts
    get delayed if some action happens (eg: new but not enough data recieved)

See: [Docs_CogenCoreEventsOperation Operation]
Note: you don't really use this, this is for subclassing for other operations.

== Methods ==

=== {{{cleanup}}} ===
signature: {{{cleanup(self, sched)}}}

Clean up after a timeout. Implemented in ops that need cleanup.
If return value evaluated to false the sched won't raise the timeout in 
the coroutine.

=== {{{finalize}}} ===
signature: {{{finalize(self)}}}



=== {{{process}}} ===
signature: {{{process(self, sched, coro)}}}




== Attributes ==

=== {{{finalized}}} ===

{{{<member 'finalized' of 'TimedOperation' objects>}}}

=== {{{prio}}} ===

{{{<member 'prio' of 'Operation' objects>}}}

=== {{{weak_timeout}}} ===

{{{<member 'weak_timeout' of 'TimedOperation' objects>}}}

