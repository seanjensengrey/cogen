#summary cogen.test.test_wsgi.SimpleAppTest_Prio Documentation for trunk
#labels Documentation

==== Parent module: [Docs_CogenTestTest_wsgi cogen.test.test_wsgi] ====
==== Classes: [Docs_CogenTestTest_wsgiSimpleapptest_prioAssertionerror AssertionError] ====
==== Methods: [#app app] [#countTestCases countTestCases] [#debug debug] [#defaultTestResult defaultTestResult] [#fail fail] [#failIf failIf] [#failIf failIf] [#failIfAlmostEqual failIfAlmostEqual] [#failIfAlmostEqual failIfAlmostEqual] [#failIfAlmostEqual failIfAlmostEqual] [#failIfEqual failIfEqual] [#failIfEqual failIfEqual] [#failIfEqual failIfEqual] [#failUnless failUnless] [#failUnless failUnless] [#failUnless failUnless] [#failUnlessAlmostEqual failUnlessAlmostEqual] [#failUnlessAlmostEqual failUnlessAlmostEqual] [#failUnlessAlmostEqual failUnlessAlmostEqual] [#failUnlessEqual failUnlessEqual] [#failUnlessEqual failUnlessEqual] [#failUnlessEqual failUnlessEqual] [#failUnlessRaises failUnlessRaises] [#failUnlessRaises failUnlessRaises] [#id id] [#run run] [#setUp setUp] [#shortDescription shortDescription] [#tearDown tearDown] [#test_app test_app] ====
==== Attributes: [#STATE_FAILED STATE_FAILED] [#middleware middleware] ====

= Class: SimpleAppTest_Prio =



== Classes ==

=== {{{AssertionError}}} ===
Assertion failed.


== Methods ==

=== {{{app}}} ===
signature: {{{app(self, environ, start_response)}}}



=== {{{countTestCases}}} ===
signature: {{{countTestCases(self)}}}



=== {{{debug}}} ===
signature: {{{debug(self)}}}

Run the test without collecting errors in a TestResult

=== {{{defaultTestResult}}} ===
signature: {{{defaultTestResult(self)}}}



=== {{{fail}}} ===
signature: {{{fail(self, msg=None)}}}

Fail immediately, with the given message.

=== {{{failIf}}} ===
signature: {{{failIf(self, expr, msg=None)}}}

Fail the test if the expression is true.

=== {{{failIf}}} ===
signature: {{{failIf(self, expr, msg=None)}}}

Fail the test if the expression is true.

=== {{{failIfAlmostEqual}}} ===
signature: {{{failIfAlmostEqual(self, first, second, places=7, msg=None)}}}

Fail if the two objects are equal as determined by their
difference rounded to the given number of decimal places
(default 7) and comparing to zero.

Note that decimal places (from zero) are usually not the same
as significant digits (measured from the most signficant digit).

=== {{{failIfAlmostEqual}}} ===
signature: {{{failIfAlmostEqual(self, first, second, places=7, msg=None)}}}

Fail if the two objects are equal as determined by their
difference rounded to the given number of decimal places
(default 7) and comparing to zero.

Note that decimal places (from zero) are usually not the same
as significant digits (measured from the most signficant digit).

=== {{{failIfAlmostEqual}}} ===
signature: {{{failIfAlmostEqual(self, first, second, places=7, msg=None)}}}

Fail if the two objects are equal as determined by their
difference rounded to the given number of decimal places
(default 7) and comparing to zero.

Note that decimal places (from zero) are usually not the same
as significant digits (measured from the most signficant digit).

=== {{{failIfEqual}}} ===
signature: {{{failIfEqual(self, first, second, msg=None)}}}

Fail if the two objects are equal as determined by the '=='
operator.

=== {{{failIfEqual}}} ===
signature: {{{failIfEqual(self, first, second, msg=None)}}}

Fail if the two objects are equal as determined by the '=='
operator.

=== {{{failIfEqual}}} ===
signature: {{{failIfEqual(self, first, second, msg=None)}}}

Fail if the two objects are equal as determined by the '=='
operator.

=== {{{failUnless}}} ===
signature: {{{failUnless(self, expr, msg=None)}}}

Fail the test unless the expression is true.

=== {{{failUnless}}} ===
signature: {{{failUnless(self, expr, msg=None)}}}

Fail the test unless the expression is true.

=== {{{failUnless}}} ===
signature: {{{failUnless(self, expr, msg=None)}}}

Fail the test unless the expression is true.

=== {{{failUnlessAlmostEqual}}} ===
signature: {{{failUnlessAlmostEqual(self, first, second, places=7, msg=None)}}}

Fail if the two objects are unequal as determined by their
difference rounded to the given number of decimal places
(default 7) and comparing to zero.

Note that decimal places (from zero) are usually not the same
as significant digits (measured from the most signficant digit).

=== {{{failUnlessAlmostEqual}}} ===
signature: {{{failUnlessAlmostEqual(self, first, second, places=7, msg=None)}}}

Fail if the two objects are unequal as determined by their
difference rounded to the given number of decimal places
(default 7) and comparing to zero.

Note that decimal places (from zero) are usually not the same
as significant digits (measured from the most signficant digit).

=== {{{failUnlessAlmostEqual}}} ===
signature: {{{failUnlessAlmostEqual(self, first, second, places=7, msg=None)}}}

Fail if the two objects are unequal as determined by their
difference rounded to the given number of decimal places
(default 7) and comparing to zero.

Note that decimal places (from zero) are usually not the same
as significant digits (measured from the most signficant digit).

=== {{{failUnlessEqual}}} ===
signature: {{{failUnlessEqual(self, first, second, msg=None)}}}

Fail if the two objects are unequal as determined by the '=='
operator.

=== {{{failUnlessEqual}}} ===
signature: {{{failUnlessEqual(self, first, second, msg=None)}}}

Fail if the two objects are unequal as determined by the '=='
operator.

=== {{{failUnlessEqual}}} ===
signature: {{{failUnlessEqual(self, first, second, msg=None)}}}

Fail if the two objects are unequal as determined by the '=='
operator.

=== {{{failUnlessRaises}}} ===
signature: {{{failUnlessRaises(self, excClass, callableObj, *args, **kwargs)}}}

Fail unless an exception of class excClass is thrown
by callableObj when invoked with arguments args and keyword
arguments kwargs. If a different type of exception is
thrown, it will not be caught, and the test case will be
deemed to have suffered an error, exactly as for an
unexpected exception.

=== {{{failUnlessRaises}}} ===
signature: {{{failUnlessRaises(self, excClass, callableObj, *args, **kwargs)}}}

Fail unless an exception of class excClass is thrown
by callableObj when invoked with arguments args and keyword
arguments kwargs. If a different type of exception is
thrown, it will not be caught, and the test case will be
deemed to have suffered an error, exactly as for an
unexpected exception.

=== {{{id}}} ===
signature: {{{id(self)}}}



=== {{{run}}} ===
signature: {{{run(self, result=None)}}}



=== {{{setUp}}} ===
signature: {{{setUp(self)}}}



=== {{{shortDescription}}} ===
signature: {{{shortDescription(self)}}}

Returns a one-line description of the test, or None if no
description has been provided.

The default implementation of this method returns the first line of
the specified test method's docstring.

=== {{{tearDown}}} ===
signature: {{{tearDown(self)}}}



=== {{{test_app}}} ===
signature: {{{test_app(self)}}}




== Attributes ==

=== {{{STATE_FAILED}}} ===

{{{3}}}

=== {{{middleware}}} ===

{{{[<function validator at 0x00F350B0>, <function sync_input at 0x00C2D5F0>]}}}

