#summary cogen.core.events.Join Documentation for trunk
#labels Documentation

==== Parent module: [Docs_CogenCoreEvents cogen.core.events] ====
==== Methods: [#__init__ __init__] ====

= Class: `Join` =

A operation for waiting on a coroutine. 
Example:

{{{
@coroutine
def coro_a():
    return_value = yield events.Join(ref)
    
    
@coroutine
def coro_b():
    yield "bla"
    raise StopIteration("some return value")

ref = scheduler.add(coro_b)
scheduler.add(coro_a)
}}}

This will pause the coroutine and resume it when the other coroutine 
(`ref` in the example) has died.

== Methods ==

=== {{{__init__}}} ===
signature: {{{__init__(self, coro, **kws)}}}




