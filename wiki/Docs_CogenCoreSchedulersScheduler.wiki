#summary cogen.core.schedulers.Scheduler Documentation for trunk
#labels Documentation

==== Parent module: [Docs_CogenCoreSchedulers cogen.core.schedulers] ====
==== Methods: [#add add] [#add_timeout add_timeout] [#handle_timeouts handle_timeouts] [#next_timer_delta next_timer_delta] [#process_op process_op] [#run run] [#run_timer run_timer] [#stop stop] ====

= Class: `Scheduler` =

Basic deque-based scheduler with timeout support and primitive 
prioritisaiton parameters.

Usage:
{{{Scheduler(reactor=DefaultReactor, default_priority=priority.LAST, default_timeout=None)}}}

  * reactor: a reactor class to use
  * default_priority: a default priority option for operations that do not 
  set it. check [Docs_CogenCoreUtilPriority priority].
  * default_timeout: a default timedelta or number of seconds to wait for 
  the operation

== Methods ==

=== {{{add}}} ===
signature: {{{add(self, coro, args=(), kwargs={}, first=True)}}}



=== {{{add_timeout}}} ===
signature: {{{add_timeout(self, op, coro, weak_timeout)}}}



=== {{{handle_timeouts}}} ===
signature: {{{handle_timeouts(self)}}}



=== {{{next_timer_delta}}} ===
signature: {{{next_timer_delta(self)}}}

~ @debug(0)


=== {{{process_op}}} ===
signature: {{{process_op(self, op, coro)}}}

~ @debug(0)        


=== {{{run}}} ===
signature: {{{run(self)}}}

This is the main loop.
This loop will exit when there are no more coroutines to run or stop has
been called.

=== {{{run_timer}}} ===
signature: {{{run_timer(self)}}}



=== {{{stop}}} ===
signature: {{{stop(self)}}}




