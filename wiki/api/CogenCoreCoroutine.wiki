#summary cogen.core.coroutine Documentation
#labels Documentation

==== Parent: [CogenCore cogen.core] ====
==== Classes: [CogenCoreCoroutineCoroutine Coroutine] ====
==== Functions: [#coroutine coroutine] ====

= Module: coroutine =


== Classes ==

=== [CogenCoreCoroutineCoroutine Coroutine] ===
We need a coroutine wrapper for generators and function alike because
we want to run functions that don'self return generators just like a 
coroutine 



== Functions ==

=== {{{coroutine}}} ===
signature: {{{coroutine(func)}}}

A decorator function for generators.
Example:

{{{
@coroutine
def plain_ol_generator():
    yield bla
    yield bla
    ...
}}}



