#summary cogen.core.sockets Documentation for trunk
#labels Documentation

==== Parent module: [Docs_CogenCore cogen.core] ====
==== Classes: [Docs_CogenCoreSocketsAccept Accept] [Docs_CogenCoreSocketsConnect Connect] [Docs_CogenCoreSocketsRead Read] [Docs_CogenCoreSocketsReadall ReadAll] [Docs_CogenCoreSocketsReadline ReadLine] [Docs_CogenCoreSocketsReadoperation ReadOperation] [Docs_CogenCoreSocketsSendfile SendFile] [Docs_CogenCoreSocketsSocket Socket] [Docs_CogenCoreSocketsSocketoperation SocketOperation] [Docs_CogenCoreSocketsWrite Write] [Docs_CogenCoreSocketsWriteall WriteAll] [Docs_CogenCoreSocketsWriteoperation WriteOperation] ====
==== Functions: [#getdefaulttimeout getdefaulttimeout] [#setdefaulttimeout setdefaulttimeout] ====
==== Attributes: [#getnow getnow] [#sendfile sendfile] ====

= Module: `sockets` =
Socket-only coroutine operations and `Socket` wrapper.
Really - the only thing you need to know for most stuff is 
the [Docs_CogenCoreSocketsSocket Socket] class.

== Classes ==

=== [Docs_CogenCoreSocketsAccept Accept] ===
Returns a (conn, addr) tuple when the operation completes.


=== [Docs_CogenCoreSocketsConnect Connect] ===
Connect to the given `addr` using `sock`.


=== [Docs_CogenCoreSocketsRead Read] ===
`len` is max read size, BUT, if if there are buffers from ReadLine 
return them first.
Example usage:

{{{
yield sockets.Read(socket_object, buffer_length)
}}}


=== [Docs_CogenCoreSocketsReadall ReadAll] ===
Run this operator till we've read `len` bytes.


=== [Docs_CogenCoreSocketsReadline ReadLine] ===
Run this operator till we read a newline (\n) or we have a overflow.

`len` is the max size for a line


=== [Docs_CogenCoreSocketsReadoperation ReadOperation] ===



=== [Docs_CogenCoreSocketsSendfile SendFile] ===
Uses underling OS sendfile call or a regular memory copy operation if 
there is no sendfile.
You can use this as a WriteAll if you specify the length.
Usage:
    
{{{
yield sockets.SendFile(file_object, socket_object, 0) 
    # will send till send operations return 0
    
yield sockets.SendFile(file_object, socket_object, 0, blocksize=0)
    # there will be only one send operation (if successfull)
    # that meas the whole file will be read in memory if there is 
    #no sendfile
    
yield sockets.SendFile(file_object, socket_object, 0, file_size)
    # this will hang if we can't read file_size bytes
    #from the file
}}}


=== [Docs_CogenCoreSocketsSocket Socket] ===
A wrapper for socket objects, sets nonblocking mode and
adds some internal bufers and wrappers. Regular calls to the usual 
socket methods return operations for use in a coroutine.

So you use this in a coroutine like:
{{{
    sock = Socket(family, type, proto) # just like the builtin socket module
    yield sock.read(1024)
}}}

Constructor details:
{{{
    Socket([family[, type[, proto]]]) -> socket object
}}}
Open a socket of the given type.  The family argument specifies the
address family; it defaults to AF_INET.  The type argument specifies
whether this is a stream (SOCK_STREAM, this is the default)
or datagram (SOCK_DGRAM) socket.  The protocol argument defaults to 0,
specifying the default protocol.  Keyword arguments are accepted.

A socket object represents one endpoint of a network connection.


=== [Docs_CogenCoreSocketsSocketoperation SocketOperation] ===
This is a generic class for a operation that involves some socket call.
    
A socket operation should subclass WriteOperation or ReadOperation, define a
`run` method and call the __init__ method of the superclass.


=== [Docs_CogenCoreSocketsWrite Write] ===
Write the buffer to the socket and return the number of bytes written.


=== [Docs_CogenCoreSocketsWriteall WriteAll] ===
Run this operation till all the bytes have been written.


=== [Docs_CogenCoreSocketsWriteoperation WriteOperation] ===




== Functions ==

=== {{{getdefaulttimeout}}} ===
signature: {{{getdefaulttimeout()}}}




=== {{{setdefaulttimeout}}} ===
signature: {{{setdefaulttimeout(timeout)}}}

Set the default timeout used by the socket wrapper 
([Docs_CogenCoreSocketsSocket Socket] class)



== Attributes ==

=== {{{getnow}}} ===

{{{<built-in method now of type object at 0x1E1CAD88>}}}


=== {{{sendfile}}} ===

{{{None}}}



