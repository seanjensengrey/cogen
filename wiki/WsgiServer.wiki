#summary cogen.web.wsgi
#labels Featured

= Introduction =

`cogen` provides a compilant wsgi server with a wsgi.file_wrapper that uses sendfile behind the scenes.



= Paste Integration =

You can use this server with paste:

Example config ini:

{{{
[server:main]
use = egg:cogen#wsgi
# Server configuration
host = 127.0.0.1
port = 85
}}}

= Example = 

{{{
from cogen.web import wsgi
from cogen.common import *
def my_crazy_app(environ, start_response):
    status = '200 OK'
    response_headers = [('Content-type','text/plain')]
    start_response(status, response_headers)
    return ["Lorem ipsum dolor sit amet, consectetuer adipiscing elit."]
server = wsgi.WSGIServer(
            ('localhost', 8070), 
            my_crazy_app,
            server_name='localhost')
m = Scheduler(default_priority=priority.LAST, default_timeout=15)
m.add(server.start)
try:
    m.run()
except (KeyboardInterrupt, SystemExit):
    pass
}}}

= Extensions =

This server has coroutine extensions that suppose to support 
use of middleware in your application. 

Example app with coroutine extensions:

{{{
def wait_app(environ, start_response):
    start_response('200 OK', [('Content-type','text/html')])
    yield "I'm waiting for some signal"
    yield environ['cogen'].core.events.WaitForSignal("abc", timeout=1)
    if isinstance(environ['cogen'].result, Exception):
        yield "Your time is up !"
    else:
        yield "Someone signaled me: %s" % environ['cogen'].result       
}}}

  * `environ['cogen'].core` is actualy a wrapper that sets `environ['cogen'].operation`  with the called object and returns a empty string. This should penetrate most of the  middleware - according to the wsgi spec, middleware should pass a empty string if it  doesn't have anything to return on that specific iteration point, or, in other words,  the length of the app iter returned by middleware should be at least that of the app.
  * the wsigi server will set `environ['cogen'].result` with the result of the operation  and `environ['cogen'].exception` with the details of the exception - if any: (exc_type, exc_value, traceback_object).