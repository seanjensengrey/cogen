#summary cogen.core.events Documentation
#labels Documentation

==== Parent: [CogenCore cogen.core] ====
==== Classes: [CogenCoreEventsAddcoro AddCoro] [CogenCoreEventsCall Call] [CogenCoreEventsConnectionclosed ConnectionClosed] [CogenCoreEventsJoin Join] [CogenCoreEventsOperationtimeout OperationTimeout] [CogenCoreEventsSignal Signal] [CogenCoreEventsSleep Sleep] [CogenCoreEventsWaitforsignal WaitForSignal] ====

= Module: events =


== Classes ==

=== [CogenCoreEventsAddcoro {{{AddCoro}}}] ===
A operator for adding a coroutine in the scheduler.
Example:

{{{
yield events.AddCoro(some_coro, args=(), kwargs={})
}}}


=== [CogenCoreEventsCall {{{Call}}}] ===
This will pause the current coroutine, add a new coro in the scheduler and 
resume the callee when it returns.

Usage:
{{{
result = yield events.Call(mycoro, args=, kwargs=, prio=)
}}}

  - if `prio` is set the new coroutine will be added in the top of the 
  scheduler queue


=== [CogenCoreEventsConnectionclosed {{{ConnectionClosed}}}] ===
Raised when the other peer has closed connection.


=== [CogenCoreEventsJoin {{{Join}}}] ===
A operator for waiting on a coroutine. 
Example:

{{{
@coroutine
def coro_a():
    return_value = yield events.Join(ref)
    
    
@coroutine
def coro_b():
    yield "bla"
    raise StopIteration("some return value")

ref = scheduler.add(coro_b)
scheduler.add(coro_a)
}}}


=== [CogenCoreEventsOperationtimeout {{{OperationTimeout}}}] ===
Raised when the timeout for a operation expires. The exception 
message will be the operation


=== [CogenCoreEventsSignal {{{Signal}}}] ===
This will resume the coroutines that where paused with WaitForSignal.

Usage:

{{{
nr = yield events.Signal(name, value)
}}}

  - nr - the number of coroutines woken up


=== [CogenCoreEventsSleep {{{Sleep}}}] ===
Usage:

{{{
yield events.Sleep(time_object)
}}}

  - timeoject - a datetime or timedelta object, or a number of seconds
    
{{{
yield events.Sleep(timestamp=ts)
}}}

  - ts - a timestamp


=== [CogenCoreEventsWaitforsignal {{{WaitForSignal}}}] ===
The coroutine will resume when the same object is Signaled.



